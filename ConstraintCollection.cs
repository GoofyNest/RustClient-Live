public sealed class ConstraintCollection : InternalDataCollectionBase // TypeDefIndex: 4175
{	// Fields
	private readonly DataTable _table; // 0x10
	private readonly ArrayList _list; // 0x18
	private int _defaultNameIndex; // 0x20
	private CollectionChangeEventHandler _onCollectionChanged; // 0x28
	private Constraint[] _delayLoadingConstraints; // 0x30
	private bool _fLoadForeignKeyConstraintsOnly; // 0x38

	// Properties
	protected override ArrayList List { get; }
	public Constraint Item { get; }
	internal DataTable Table { get; }
	public Constraint Item { get; }

	// Methods

	// RVA: 0x12236B0 Offset: 0x1222AB0 VA: 0x1812236B0
	internal void .ctor(DataTable table) { }

	// RVA: 0x497710 Offset: 0x496B10 VA: 0x180497710 Slot: 11
	protected override ArrayList get_List() { }

	// RVA: 0x1223870 Offset: 0x1222C70 VA: 0x181223870
	public Constraint get_Item(int index) { }

	// RVA: 0x4B9460 Offset: 0x4B8860 VA: 0x1804B9460
	internal DataTable get_Table() { }

	// RVA: 0x1223760 Offset: 0x1222B60 VA: 0x181223760
	public Constraint get_Item(string name) { }

	// RVA: 0x1220FA0 Offset: 0x12203A0 VA: 0x181220FA0
	public void Add(Constraint constraint) { }

	// RVA: 0x1221060 Offset: 0x1220460 VA: 0x181221060
	internal void Add(Constraint constraint, bool addUniqueWhenAddingForeign) { }

	// RVA: 0x1220FB0 Offset: 0x12203B0 VA: 0x181220FB0
	public Constraint Add(string name, DataColumn[] columns, bool primaryKey) { }

	// RVA: 0x1220EA0 Offset: 0x12202A0 VA: 0x181220EA0
	private void AddUniqueConstraint(UniqueConstraint constraint) { }

	// RVA: 0x1220E10 Offset: 0x1220210 VA: 0x181220E10
	private void AddForeignKeyConstraint(ForeignKeyConstraint constraint) { }

	// RVA: 0x1221A10 Offset: 0x1220E10 VA: 0x181221A10
	private bool AutoGenerated(Constraint constraint) { }

	// RVA: 0x1221970 Offset: 0x1220D70 VA: 0x181221970
	private void ArrayAdd(Constraint constraint) { }

	// RVA: 0x12219B0 Offset: 0x1220DB0 VA: 0x1812219B0
	private void ArrayRemove(Constraint constraint) { }

	// RVA: 0x12219F0 Offset: 0x1220DF0 VA: 0x1812219F0
	internal string AssignName() { }

	// RVA: 0x1221AE0 Offset: 0x1220EE0 VA: 0x181221AE0
	private void BaseAdd(Constraint constraint) { }

	// RVA: 0x1221BD0 Offset: 0x1220FD0 VA: 0x181221BD0
	private void BaseGroupSwitch(Constraint[] oldArray, int oldLength, Constraint[] newArray, int newLength) { }

	// RVA: 0x1221E20 Offset: 0x1221220 VA: 0x181221E20
	private void BaseRemove(Constraint constraint) { }

	// RVA: 0x12221A0 Offset: 0x12215A0 VA: 0x1812221A0
	internal bool CanRemove(Constraint constraint, bool fThrowException) { }

	// RVA: 0x12221D0 Offset: 0x12215D0 VA: 0x1812221D0
	public void Clear() { }

	// RVA: 0x1222780 Offset: 0x1221B80 VA: 0x181222780
	public bool Contains(string name) { }

	// RVA: 0x12227A0 Offset: 0x1221BA0 VA: 0x1812227A0
	internal bool Contains(string name, bool caseSensitive) { }

	// RVA: 0x1222910 Offset: 0x1221D10 VA: 0x181222910
	internal Constraint FindConstraint(Constraint constraint) { }

	// RVA: 0x1222C90 Offset: 0x1222090 VA: 0x181222C90
	internal UniqueConstraint FindKeyConstraint(DataColumn[] columns) { }

	// RVA: 0x1222DD0 Offset: 0x12221D0 VA: 0x181222DD0
	internal UniqueConstraint FindKeyConstraint(DataColumn column) { }

	// RVA: 0x1222B30 Offset: 0x1221F30 VA: 0x181222B30
	internal ForeignKeyConstraint FindForeignKeyConstraint(DataColumn[] parentColumns, DataColumn[] childColumns) { }

	// RVA: 0x12226D0 Offset: 0x1221AD0 VA: 0x1812226D0
	private static bool CompareArrays(DataColumn[] a1, DataColumn[] a2) { }

	// RVA: 0x1222F00 Offset: 0x1222300 VA: 0x181222F00
	internal int InternalIndexOf(string constraintName) { }

	// RVA: 0x12230A0 Offset: 0x12224A0 VA: 0x1812230A0
	private string MakeName(int index) { }

	// RVA: 0xE62C30 Offset: 0xE62030 VA: 0x180E62C30
	private void OnCollectionChanged(CollectionChangeEventArgs ccevent) { }

	// RVA: 0x1223130 Offset: 0x1222530 VA: 0x181223130
	internal void RegisterName(string name) { }

	// RVA: 0x12233B0 Offset: 0x12227B0 VA: 0x1812233B0
	public void Remove(Constraint constraint) { }

	// RVA: 0x12235A0 Offset: 0x12229A0 VA: 0x1812235A0
	internal void UnregisterName(string name) { }

}

